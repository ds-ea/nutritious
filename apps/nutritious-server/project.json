{
	"name": "nutritious-server",
	"$schema": "../../node_modules/nx/schemas/project-schema.json",
	"sourceRoot": "apps/nutritious-server/src",
	"projectType": "application",
	"targets": {
		"build": {
			"executor": "@nx/webpack:webpack",
			"outputs": ["{options.outputPath}"],
			"defaultConfiguration": "production",
			"options": {
				"target": "node",
				"compiler": "tsc",
				"outputPath": "dist/apps/nutritious-server",
				"main": "apps/nutritious-server/src/main.ts",
				"tsConfig": "apps/nutritious-server/tsconfig.app.json",
				"assets": [
					"apps/nutritious-server/src/assets",
					"apps/nutritious-server/src/public",
					"apps/nutritious-server/src/views"
				],
				"isolatedConfig": true,
				"webpackConfig": "apps/nutritious-server/webpack.config.js"
			},
			"configurations": {
				"development": {},
				"production": {}
			}
		},
		"serve": {
			"executor": "@nx/js:node",
			"defaultConfiguration": "development",
			"options": {
				"buildTarget": "nutritious-server:build"
			},
			"configurations": {
				"development": {
					"buildTarget": "nutritious-server:build:development"
				},
				"production": {
					"buildTarget": "nutritious-server:build:production"
				}
			}
		},
		"lint": {
			"executor": "@nx/eslint:lint",
			"outputs": ["{options.outputFile}"],
			"options": {
				"lintFilePatterns": ["apps/nutritious-server/**/*.ts"]
			}
		},
		"test": {
			"executor": "@nx/jest:jest",
			"outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
			"options": {
				"jestConfig": "apps/nutritious-server/jest.config.ts",
				"passWithNoTests": true
			},
			"configurations": {
				"ci": {
					"ci": true,
					"codeCoverage": true
				}
			}
		},
		"prisma": {
			"executor": "nx:run-commands",
			"options": {
				"commands": [
					{
						"command": "prisma",
						"forwardAllArgs": true
					}
				],
				"cwd": "apps/nutritious-server/src",
				"parallel": false
			},
			"configurations": {
				"push": {
					"commands": [
						"prisma db push"
					]
				},
				"migrate-dev": {
					"commands": [
						{
							"command": "prisma migrate dev",
							"forwardAllArgs": true
						}
					]
				},
				"format": {
					"commands": [
						"prisma format"
					]
				},
				"generate": {
					"commands": [
						{
							"command": "prisma generate",
							"forwardAllArgs": true
						}
					]
				}
			}
		}
	},
	"tags": []
}
